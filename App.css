.App {
  text-align: center;
}

/** 
  We've given you container the astronaut css. 
  The rest you have to implement.
*/
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-image: linear-gradient(to bottom, #192334, #b1c6bf);
  min-height: 100vh;
}

.astronaut {
  animation: MoveUpDown 4s linear infinite;
  height: 20vh;
  position: relative;
}

.number{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: xxx-large;
  font-weight: 800;
  color: white;

}

.inline-block {
  display: inline-block;
}

.container1 {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  color: #273654;
  background-color: #eee;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  border-radius: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.container1:active {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  color: #eee;
  background-color:#273654;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  border-radius: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.container1 input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  background-color:  red;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: gray;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container1:hover input ~ .checkmark {
  background-color:  rgb(119, 126, 156);
}

/* When the radio button is checked, add a blue background */
.container1 input:checked ~ .checkmark {
  background-color: #273654;
}

.container1 input:checked {
  background-color: #273654;
}


/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  background-color: #dadee6;}


.container1:after {
  background-color: gray;}

/* Show the indicator (dot/circle) when checked */
.container1 input:checked ~ .checkmark:after {
  display: block;
  background-color:gray;

}

/* Style the indicator (dot/circle) */
.container1 .checkmark:after {
 	top: 9px;
	left: 9px;
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background: rgb(100, 100, 14);
}
.container1 .checked:after {
  width: 15px;
  height: 15px;
  border-radius: 15px;
  top: -2px;
  left: -1px;
  position: relative;
  background-color: #ffa500;
  content: '';
  display: inline-block;
  visibility: visible;
  border: 2px solid white;

}

.button1{
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  color: #273654;
  background-color: #eee;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  border-radius: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  /*width: 15px;
  height: 15px;
  border-radius: 15px;
  color: white;
  background-color: #518360;
  **/
}

.next {
  font-weight: 600;
  color: white;
  background-color: #518360;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  font-size: 16px;
  border-radius: 16px;
  width: 100px;
  margin-left:480px;
  }

.next:active {
  font-weight: 600;
  color: white;
  background-color: #518360;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  font-size: 16px;
  border-radius: 16px;
  width: 100px;
  margin-left:480px;
  }
@keyframes MoveUpDown {
  0%,
  100% {
    bottom: 0;
  }
  50% {
    bottom: 25px;
  }
}

/**
  Other helpful details for the header.js css:
  The plant button should have background-color: #273654;
  If you have other questions with regard to the CSS take a 
  look at our final product:
    - Right click on any part of it on your browser (preferably Google Chrome)
    - Click Inspect to see the raw HTML/ CSS that we used.
    - You should be able to see all the css that we used when we designed the components.
*/

/*When you are implementing Card One/First Card, this is how you highlight a button*/
.active {
  background-color: #273654!important;
  color: #fff!important;
}